{
    "name": "1C:Community (BSL)",
    "scopeName": "source.bsl",
    "patterns": [
        {
            "include": "#basic"
        },
        {
            "include": "#miscellaneous"
        },
        {
            "include": "#functionDocumentation"
        },
        {
            "include": "#functionDefinition"
        },
        {
            "include": "#functionEnd"
        },
        {
            "comment": "Define of variable",
            "begin": "(?i:(?<=[^\\wа-яё\\.]|^)(Перем)\\s+([a-zа-яё0-9_]+)\\s*)",
            "beginCaptures": {
                "1": {
                    "name": "storage.type.var.bsl"
                },
                "2": {
                    "name": "variable.bsl"
                }
            },
            "end": "(;)",
            "endCaptures": {
                "1": {
                    "name": "keyword.operator.bsl"
                }
            },
            "patterns": [
                {
                    "name": "keyword.operator.bsl",
                    "match": "(,)"
                },
                {
                    "name": "storage.modifier.bsl",
                    "match": "(?i:(?<=[^\\wа-яё\\.]|^)(Экспорт)(?=[^\\wа-яё\\.]|$))"
                }
            ]
        },
        {
            "comment": "Conditional",
            "name": "meta.conditional.bsl",
            "begin": "(?i:(?<=;|^)\\s*(Если))",
            "beginCaptures": {
                "1": {
                    "name": "keyword.control.conditional.bsl"
                }
            },
            "end": "(?i:(Тогда|Then))",
            "endCaptures": {
                "1": {
                    "name": "keyword.control.conditional.bsl"
                }
            },
            "patterns": [
                {
                    "include": "#basic"
                },
                {
                    "include": "#miscellaneous"
                },
                {
                    "include": "#blockEntities"
                }
            ]
        },
        {
            "comment": "Variable assignment",
            "name": "meta.var-single-variable.bsl",
            "begin": "(?i:(?<=;|^)\\s*([\\wа-яё]+))\\s*(=)",
            "beginCaptures": {
                "1": {
                    "name": "variable.assignment.bsl"
                },
                "2": {
                    "name": "keyword.operator.assignment.bsl"
                }
            },
            "end": "(?i:(?=(;|Иначе|Конец)))",
            "patterns": [
                {
                    "include": "#basic"
                },
                {
                    "include": "#miscellaneous"
                },
                {
                    "include": "#blockEntities"
                }
            ]
        },
        {
            "name": "keyword.control.import.bsl",
            "match": "(?i)#(Использовать)(?=[^\\wа-яё\\.]|$)"
        },
        {
            "name": "keyword.control.native.bsl",
            "match": "(?i)#native"
        },
        {
            "name": "keyword.control.bsl",
            "match": "(?i:(?<=[^\\wа-яё\\.]|^)(Прервать|Продолжить|Возврат)(?=[^\\wа-яё\\.]|$))"
        },
        {
            "name": "keyword.control.conditional.bsl",
            "match": "(?i:(?<=[^\\wа-яё\\.]|^)(Если|If|Иначе|ИначеЕсли|Тогда|КонецЕсли)(?=[^\\wа-яё\\.]|$))"
        },
        {
            "name": "keyword.control.exception.bsl",
            "match": "(?i:(?<=[^\\wа-яё\\.]|^)(Попытка|Исключение|КонецПопытки|ВызватьИсключение)(?=[^\\wа-яё\\.]|$))"
        },
        {
            "name": "keyword.control.repeat.bsl",
            "match": "(?i:(?<=[^\\wа-яё\\.]|^)(Пока|(Для)(\\s+(Каждого))?|Из|По|Цикл|КонецЦикла)(?=[^\\wа-яё\\.]|$))"
        },
        {
            "name": "storage.modifier.directive.bsl",
            "match": "(?i:&(НаКлиенте((НаСервере(БезКонтекста)?)?)|НаСервере(БезКонтекста)?))"
        },
        {
            "include": "#annotations"
        },
        {
            "name": "keyword.other.preprocessor.bsl",
            "match": "(?i:#(Если|ИначеЕсли|Иначе|КонецЕсли).*(Тогда)?)"
        },
        {
            "include": "#mainRegion"
        },
        {
            "include": "#blockEntities"
        }
    ],
    "repository": {
        "miscellaneous": {
            "patterns": [
                {
                    "include": "#keywordOperators"
                },
                {
                    "include": "#objectDefinition"
                },
                {
                    "include": "#supportFunctions"
                },
                {
                    "include": "#supportEnums"
                },
                {
                    "include": "#supportClasses"
                },
                {
                    "include": "#supportValueTypes"
                },
                {
                    "include": "#supportLanguageConstant"
                }
            ]
        },
        "query": {
            "begin": "(?i)(?<=[^\\wа-яё\\.]|^)(Выбрать(\\s+Разрешенные)?(\\s+Различные)?(\\s+Первые)?)(?=[^\\wа-яё\\.]|$)",
            "beginCaptures": {
                "1": {
                    "name": "keyword.control.sdbl"
                }
            },
            "end": "(?=\\\"[^\\\"])",
            "patterns": [
                {
                    "name": "comment.line.double-slash.sdbl",
                    "match": "(//((\\\"\\\")|[^\\\"])*)"
                },
                {
                    "include": "#extensionRegions"
                },
                {
                    "name": "string.quoted.double.sdbl",
                    "match": "\\\"\\\"[^\"]*\\\"\\\""
                },
                {
                    "include": "source.sdbl"
                },
                {
                    "name": "comment.line.double-slash.bsl",
                    "begin": "^\\s*//",
                    "end": "$"
                }
            ]
        },
        "basic": {
            "patterns": [
                {
                    "include": "#commentBlock"
                },
                {
                    "include": "#commentLine"
                },
                {
                    "include": "#stringWithSingleSupportValue"
                },
                {
                    "include": "#stringSupportValues"
                },
                {
                    "include": "#quotedString"
                },
                {
                    "name": "constant.language.bsl",
                    "match": "(?i:(?<=[^\\wа-яё\\.]|^)(Неопределено|Истина|Ложь)(?=[^\\wа-яё\\.]|$))"
                },
                {
                    "name": "constant.numeric.bsl",
                    "match": "(?<=[^\\wа-яё\\.]|^)(\\d+\\.?\\d*)(?=[^\\wа-яё\\.]|$)"
                },
                {
                    "name": "constant.other.date.bsl",
                    "match": "\\'((\\d{4}[^\\d\\']*\\d{2}[^\\d\\']*\\d{2})([^\\d\\']*\\d{2}[^\\d\\']*\\d{2}([^\\d\\']*\\d{2})?)?)\\'"
                },
                {
                    "name": "keyword.operator.bsl",
                    "match": "(,)"
                },
                {
                    "name": "punctuation.bracket.begin.bsl",
                    "match": "(\\()"
                },
                {
                    "name": "punctuation.bracket.end.bsl",
                    "match": "(\\))"
                },
                {
                    "include": "#extensionRegions"
                }
            ]
        },
        "annotations": {
            "patterns": [
                {
                    "comment": "Annotations with parameters",
                    "begin": "(?i)(&([a-zа-яё0-9_]+))\\s*(\\()",
                    "beginCaptures": {
                        "1": {
                            "name": "storage.type.annotation.bsl"
                        },
                        "3": {
                            "name": "punctuation.bracket.begin.bsl"
                        }
                    },
                    "end": "(\\))",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.bracket.end.bsl"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#basic"
                        },
                        {
                            "name": "keyword.operator.assignment.bsl",
                            "match": "(=)"
                        },
                        {
                            "name": "invalid.illegal.bsl",
                            "match": "(?<=[^\\wа-яё\\.]|^)((?<==)(?i)[a-zа-яё0-9_]+)(?=[^\\wа-яё\\.]|$)"
                        },
                        {
                            "name": "invalid.illegal.bsl",
                            "match": "(?<=[^\\wа-яё\\.]|^)((?<==\\s)\\s*(?i)[a-zа-яё0-9_]+)(?=[^\\wа-яё\\.]|$)"
                        },
                        {
                            "name": "variable.annotation.bsl",
                            "match": "(?i)[a-zа-яё0-9_]+"
                        }
                    ]
                },
                {
                    "comment": "Annotations without parameters",
                    "name": "storage.type.annotation.bsl",
                    "match": "(?i)(&([a-zа-яё0-9_]+))"
                }
            ]
        },
        "blockVariables": {
            "patterns": [
                {
                    "match": "\\b([_$[:alpha:]][_$[:alnum:]]*)\\b(?=[\\s*\\[]?)(?![\\(])",
                    "captures": {
                        "1": {
                            "name": "variable.other.readwrite.bsl, entity.name.variable.bsl"
                        }
                    }
                }
            ]
        },
        "blockFunctions": {
            "patterns": [
                {
                    "begin": "(?<!(?i:Новый|New)\\s+)(?:\\s*(\\.)\\s*)?\\b([_$[:alpha:]][_$[:alnum:]]*\\b)(?:\\s*)(\\()\\s*",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.accessor.bsl"
                        },
                        "2": {
                            "name": "entity.name.function.bsl"
                        },
                        "3": {
                            "name": "punctuation.bracket.begin.bsl"
                        }
                    },
                    "end": "\\s*(\\))",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.bracket.end.bsl"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#basic"
                        },
                        {
                            "include": "#miscellaneous"
                        },
                        {
                            "include": "#blockEntities"
                        }
                    ]
                }
            ]
        },
        "blockObjectProperties": {
            "patterns": [
                {
                    "match": "(?<=(?i:Метаданные)\\s*)(\\.)(?:\\s*)(РежимСовместимости|СвойстваОбъектов)(?:\\s*)(?!\\s*\\()",
                    "captures": {
                        "1": {
                            "name": "punctuation.accessor.bsl"
                        },
                        "2": {
                            "name": "support.constant.bsl"
                        }
                    }
                },
                {
                    "match": "(?<=(?:\\b[_$[:alpha:]][_$[:alnum:]]*\\s*)|(?:[\\s\\]]*))(\\.)(?:\\s*)([_$[:alpha:]][_$[:alnum:]]*\\b)(?:\\s*)(?=[\\[]?)(?!\\s*\\()",
                    "captures": {
                        "1": {
                            "name": "punctuation.accessor.bsl"
                        },
                        "2": {
                            "name": "variable.other.property.bsl"
                        }
                    }
                }
            ]
        },
        "arrayLiteral": {
            "name": "meta.array.literal.bsl",
            "begin": "\\s*(\\[)",
            "beginCaptures": {
                "1": {
                    "name": "meta.brace.square.bsl"
                }
            },
            "end": "\\]",
            "endCaptures": {
                "0": {
                    "name": "meta.brace.square.bsl"
                }
            },
            "patterns": [
                {
                    "include": "#basic"
                },
                {
                    "include": "#blockEntities"
                }
            ]
        },
        "blockAwait": {
            "patterns": [
                {
                    "match": "\\b([Жж]дать)\\b",
                    "name": "keyword.control.flow.bsl"
                }
            ]
        },
        "blockEntities": {
            "patterns": [
                {
                    "include": "#blockAwait"
                },
                {
                    "include": "#arrayLiteral"
                },
                {
                    "include": "#blockFunctions"
                },
                {
                    "include": "#blockObjectProperties"
                },
                {
                    "include": "#blockVariables"
                }
            ]
        },
        "keywordOperators": {
            "patterns": [
                {
                    "name": "keyword.operator.logical.bsl",
                    "match": "(?i:(?<=[^\\wа-яё\\.]|^)(НЕ|И|ИЛИ)(?=[^\\wа-яё\\.]|$))"
                },
                {
                    "name": "keyword.operator.comparison.bsl",
                    "match": "<=|>=|=|<|>"
                },
                {
                    "name": "keyword.operator.arithmetic.bsl",
                    "match": "(\\+|-|\\*|/|%)"
                },
                {
                    "name": "keyword.operator.bsl",
                    "match": "(;|\\?)"
                }
            ]
        },
        "supportFunctions": {
            "patterns": [
                {
                    "comment": "Глобальный контекст - функции работы со значениями типа Строка",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(СтрДлина|СокрЛ|СокрП|СокрЛП|Лев|Прав|Сред|СтрНайти|ВРег|НРег|ТРег|Символ|КодСимвола|ПустаяСтрока|СтрЗаменить|СтрЧислоСтрок|СтрПолучитьСтроку|СтрЧислоВхождений|СтрСравнить|СтрНачинаетсяС|СтрЗаканчиваетсяНа|СтрРазделить|СтрСоединить)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - функции работы со значениями типа Число",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(Цел|Окр|ACos|ASin|ATan|Cos|Exp|Log|Log10|Pow|Sin|Sqrt|Tan)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - функции работы со значениями типа Дата",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(Год|Месяц|День|Час|Минута|Секунда|НачалоГода|НачалоДня|НачалоКвартала|НачалоМесяца|НачалоМинуты|НачалоНедели|НачалоЧаса|КонецГода|КонецДня|КонецКвартала|КонецМесяца|КонецМинуты|КонецНедели|КонецЧаса|НеделяГода|ДеньГода|ДеньНедели|ТекущаяДата|ДобавитьМесяц)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - функции работы со значениями типа Тип",
                    "name": "support.function.bsl",
                    "match": "(?i:(?<=[^\\wа-яё\\.]|^)(Тип|ТипЗнч)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - функции преобразования значений",
                    "name": "support.function.bsl",
                    "match": "(?i:(?<=[^\\wа-яё\\.]|^)(Булево|Число|Строка|Дата)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - процедуры и функции интерактивной работы",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(ПоказатьВопрос|Вопрос|ПоказатьПредупреждение|Предупреждение|Сообщить|ОчиститьСообщения|ОповеститьОбИзменении|Состояние|Сигнал|ПоказатьЗначение|ОткрытьЗначение|Оповестить|ОбработкаПрерыванияПользователя|ОткрытьСодержаниеСправки|ОткрытьИндексСправки|ОткрытьСправку|ПоказатьИнформациюОбОшибке|КраткоеПредставлениеОшибки|ПодробноеПредставлениеОшибки|ПолучитьФорму|ЗакрытьСправку|ПоказатьОповещениеПользователя|ОткрытьФорму|ОткрытьФормуМодально|АктивноеОкно|ВыполнитьОбработкуОповещения)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - функции для вызова диалога ввода данных",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(ПоказатьВводЗначения|ВвестиЗначение|ПоказатьВводЧисла|ВвестиЧисло|ПоказатьВводСтроки|ВвестиСтроку|ПоказатьВводДаты|ВвестиДату)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - функции форматирования",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(Формат|ЧислоПрописью|НСтр|ПредставлениеПериода|СтрШаблон)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - функции регулярных выражений",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(СтрЗаменитьПоРегулярномуВыражению)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - функции обращения к конфигурации",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(ПолучитьОбщийМакет|ПолучитьОбщуюФорму|ПредопределенноеЗначение|ПолучитьПолноеИмяПредопределенногоЗначения)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - процедуры и функции сеанса работы",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(ПолучитьЗаголовокСистемы|ПолучитьСкоростьКлиентскогоСоединения|ПодключитьОбработчикОжидания|УстановитьЗаголовокСистемы|ОтключитьОбработчикОжидания|ИмяКомпьютера|ЗавершитьРаботуСистемы|ИмяПользователя|ПрекратитьРаботуСистемы|ПолноеИмяПользователя|ЗаблокироватьРаботуПользователя|КаталогПрограммы|КаталогВременныхФайлов|ПравоДоступа|РольДоступна|ТекущийЯзык|ТекущийКодЛокализации|СтрокаСоединенияИнформационнойБазы|ПодключитьОбработчикОповещения|ОтключитьОбработчикОповещения|ПолучитьСообщенияПользователю|ПараметрыДоступа|ПредставлениеПриложения|ТекущийЯзыкСистемы|ЗапуститьСистему|ТекущийРежимЗапуска|УстановитьЧасовойПоясСеанса|ЧасовойПоясСеанса|ТекущаяДатаСеанса|УстановитьКраткийЗаголовокПриложения|ПолучитьКраткийЗаголовокПриложения|ПредставлениеПрава|ВыполнитьПроверкуПравДоступа|РабочийКаталогДанныхПользователя|КаталогДокументов|ПолучитьИнформациюЭкрановКлиента|ТекущийВариантОсновногоШрифтаКлиентскогоПриложения|ТекущийВариантИнтерфейсаКлиентскогоПриложения|УстановитьЗаголовокКлиентскогоПриложения|ПолучитьЗаголовокКлиентскогоПриложения|НачатьПолучениеКаталогаВременныхФайлов|НачатьПолучениеКаталогаДокументов|НачатьПолучениеРабочегоКаталогаДанныхПользователя|ПодключитьОбработчикЗапросаНастроекКлиентаЛицензирования|ОтключитьОбработчикЗапросаНастроекКлиентаЛицензирования|КаталогБиблиотекиМобильногоУстройства)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - процедуры и функции сохранения значений",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(ЗначениеВСтрокуВнутр|ЗначениеИзСтрокиВнутр|ЗначениеВФайл|ЗначениеИзФайла)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - Процедуры и функции работы с операционной системой",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(КомандаСистемы|ЗапуститьПриложение|ПолучитьCOMОбъект|ПользователиОС|НачатьЗапускПриложения)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - Процедуры и функции работы с внешними компонентами",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(ПодключитьВнешнююКомпоненту|НачатьУстановкуВнешнейКомпоненты|УстановитьВнешнююКомпоненту|НачатьПодключениеВнешнейКомпоненты)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - Процедуры и функции работы с файлами",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(КопироватьФайл|ПереместитьФайл|УдалитьФайлы|НайтиФайлы|СоздатьКаталог|ПолучитьИмяВременногоФайла|РазделитьФайл|ОбъединитьФайлы|ПолучитьФайл|НачатьПомещениеФайла|ПоместитьФайл|ЭтоАдресВременногоХранилища|УдалитьИзВременногоХранилища|ПолучитьИзВременногоХранилища|ПоместитьВоВременноеХранилище|ПодключитьРасширениеРаботыСФайлами|НачатьУстановкуРасширенияРаботыСФайлами|УстановитьРасширениеРаботыСФайлами|ПолучитьФайлы|ПоместитьФайлы|ЗапроситьРазрешениеПользователя|ПолучитьМаскуВсеФайлы|ПолучитьМаскуВсеФайлыКлиента|ПолучитьМаскуВсеФайлыСервера|ПолучитьРазделительПути|ПолучитьРазделительПутиКлиента|ПолучитьРазделительПутиСервера|НачатьПодключениеРасширенияРаботыСФайлами|НачатьЗапросРазрешенияПользователя|НачатьПоискФайлов|НачатьСозданиеКаталога|НачатьКопированиеФайла|НачатьПеремещениеФайла|НачатьУдалениеФайлов|НачатьПолучениеФайлов|НачатьПомещениеФайлов|НачатьСозданиеДвоичныхДанныхИзФайла)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - Процедуры и функции работы с информационной базой",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(НачатьТранзакцию|ЗафиксироватьТранзакцию|ОтменитьТранзакцию|УстановитьМонопольныйРежим|МонопольныйРежим|ПолучитьОперативнуюОтметкуВремени|ПолучитьСоединенияИнформационнойБазы|НомерСоединенияИнформационнойБазы|КонфигурацияИзменена|КонфигурацияБазыДанныхИзмененаДинамически|УстановитьВремяОжиданияБлокировкиДанных|ОбновитьНумерациюОбъектов|ПолучитьВремяОжиданияБлокировкиДанных|КодЛокализацииИнформационнойБазы|УстановитьМинимальнуюДлинуПаролейПользователей|ПолучитьМинимальнуюДлинуПаролейПользователей|ИнициализироватьПредопределенныеДанные|УдалитьДанныеИнформационнойБазы|УстановитьПроверкуСложностиПаролейПользователей|ПолучитьПроверкуСложностиПаролейПользователей|ПолучитьСтруктуруХраненияБазыДанных|УстановитьПривилегированныйРежим|ПривилегированныйРежим|ТранзакцияАктивна|НеобходимостьЗавершенияСоединения|НомерСеансаИнформационнойБазы|ПолучитьСеансыИнформационнойБазы|ЗаблокироватьДанныеДляРедактирования|УстановитьСоединениеСВнешнимИсточникомДанных|РазблокироватьДанныеДляРедактирования|РазорватьСоединениеСВнешнимИсточникомДанных|ПолучитьБлокировкуСеансов|УстановитьБлокировкуСеансов|ОбновитьПовторноИспользуемыеЗначения|УстановитьБезопасныйРежим|БезопасныйРежим|ПолучитьДанныеВыбора|УстановитьЧасовойПоясИнформационнойБазы|ПолучитьЧасовойПоясИнформационнойБазы|ПолучитьОбновлениеКонфигурацииБазыДанных|УстановитьБезопасныйРежимРазделенияДанных|БезопасныйРежимРазделенияДанных|УстановитьВремяЗасыпанияПассивногоСеанса|ПолучитьВремяЗасыпанияПассивногоСеанса|УстановитьВремяЗавершенияСпящегоСеанса|ПолучитьВремяЗавершенияСпящегоСеанса|ПолучитьТекущийСеансИнформационнойБазы|ПолучитьИдентификаторКонфигурации|УстановитьНастройкиКлиентаЛицензирования|ПолучитьИмяКлиентаЛицензирования|ПолучитьДополнительныйПараметрКлиентаЛицензирования|ПолучитьОтключениеБезопасногоРежима|УстановитьОтключениеБезопасногоРежима)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - Процедуры и функции работы с данными информационной базы",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(НайтиПомеченныеНаУдаление|НайтиПоСсылкам|УдалитьОбъекты|УстановитьОбновлениеПредопределенныхДанныхИнформационнойБазы|ПолучитьОбновлениеПредопределенныхДанныхИнформационнойБазы)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - Процедуры и функции работы с XML",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(XMLСтрока|XMLЗначение|XMLТип|XMLТипЗнч|ИзXMLТипа|ВозможностьЧтенияXML|ПолучитьXMLТип|ПрочитатьXML|ЗаписатьXML|НайтиНедопустимыеСимволыXML|ИмпортМоделиXDTO|СоздатьФабрикуXDTO)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - Процедуры и функции работы с JSON",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(ЗаписатьJSON|ПрочитатьЗначениеJSON|ЗаписатьЗначениеJSON|ПрочитатьJSON|ПрочитатьДатуJSON|ЗаписатьДатуJSON)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - Процедуры и функции работы с журналом регистрации",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(ЗаписьЖурналаРегистрации|ПолучитьИспользованиеЖурналаРегистрации|УстановитьИспользованиеЖурналаРегистрации|ПредставлениеСобытияЖурналаРегистрации|ВыгрузитьЖурналРегистрации|ПолучитьЗначенияОтбораЖурналаРегистрации|УстановитьИспользованиеСобытияЖурналаРегистрации|ПолучитьИспользованиеСобытияЖурналаРегистрации|СкопироватьЖурналРегистрации|ОчиститьЖурналРегистрации)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - Процедуры и функции работы с универсальными объектами",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(ЗначениеВДанныеФормы|ДанныеФормыВЗначение|КопироватьДанныеФормы|УстановитьСоответствиеОбъектаИФормы|ПолучитьСоответствиеОбъектаИФормы)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - Процедуры и функции работы с функциональными опциями",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(ПолучитьФункциональнуюОпцию|ПолучитьФункциональнуюОпциюИнтерфейса|УстановитьПараметрыФункциональныхОпцийИнтерфейса|ПолучитьПараметрыФункциональныхОпцийИнтерфейса|ОбновитьИнтерфейс)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - Процедуры и функции работы с криптографией",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(УстановитьРасширениеРаботыСКриптографией|НачатьУстановкуРасширенияРаботыСКриптографией|ПодключитьРасширениеРаботыСКриптографией|НачатьПодключениеРасширенияРаботыСКриптографией)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - Процедуры и функции работы со стандартным интерфейсом OData",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(УстановитьСоставСтандартногоИнтерфейсаOData|ПолучитьСоставСтандартногоИнтерфейсаOData)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - Процедуры и функции работы с двоичными данными",
                    "name": "support.function.bsl",
                    "match": "(?i:(?<=[^\\wа-яё\\.]|^)(СоединитьБуферыДвоичныхДанных)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - Прочие процедуры и функции",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(Мин|Макс|ОписаниеОшибки|Вычислить|ИнформацияОбОшибке|Base64Значение|Base64Строка|ЗаполнитьЗначенияСвойств|ЗначениеЗаполнено|ПолучитьПредставленияНавигационныхСсылок|НайтиОкноПоНавигационнойСсылке|ПолучитьОкна|ПерейтиПоНавигационнойСсылке|ПолучитьНавигационнуюСсылку|ПолучитьДопустимыеКодыЛокализации|ПолучитьНавигационнуюСсылкуИнформационнойБазы|ПредставлениеКодаЛокализации|ПолучитьДопустимыеЧасовыеПояса|ПредставлениеЧасовогоПояса|ТекущаяУниверсальнаяДата|ТекущаяУниверсальнаяДатаВМиллисекундах|МестноеВремя|УниверсальноеВремя|ЧасовойПояс|СмещениеЛетнегоВремени|СмещениеСтандартногоВремени|КодироватьСтроку|РаскодироватьСтроку|Найти|ПродолжитьВызов)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - События приложения и сеанса",
                    "name": "support.function.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(ПередНачаломРаботыСистемы|ПриНачалеРаботыСистемы|ПередЗавершениемРаботыСистемы|ПриЗавершенииРаботыСистемы|ОбработкаВнешнегоСобытия|УстановкаПараметровСеанса|ПриИзмененииПараметровЭкрана|)\\s*(?=\\())"
                },
                {
                    "comment": "Глобальный контекст - Свойства (переменные)",
                    "name": "support.variable.bsl",
                    "match": "(?x)(?i:(?<=[^\\wа-яё\\.]|^)(ГлавныйИнтерфейс|ГлавныйСтиль|ПараметрЗапуска|РабочаяДата|ХранилищеВариантовОтчетов|ХранилищеНастроекДанныхФорм|ХранилищеОбщихНастроек|ХранилищеПользовательскихНастроекДинамическихСписков|ХранилищеПользовательскихНастроекОтчетов|ХранилищеСистемныхНастроек)(?=[^\\wа-яё]|$))"
                },
                {
                    "comment": "Async support functions",
                    "name": "support.function.bsl",
                    "match": "(?i:)(?<![\\.\\)\\]]\\s*)\\b(ВвестиДатуАсинх|ВопросАсинх|НайтиФайлыАсинх)\\b(?=\\s*\\()"
                }
            ]
        },
        "objectDefinition": {
            "patterns": [
                {
                    "match": "(?i:(Новый|New)\\s+)([_$[:alpha:]][_$[:alnum:]]*\\b)",
                    "captures": {
                        "1": {
                            "name": "keyword.operator.new.bsl"
                        },
                        "2": {
                            "name": "support.class.bsl"
                        }
                    }
                },
                {
                    "begin": "(?i:(Новый|New)\\s+)([_$[:alpha:]][_$[:alnum:]]*\\b)(?:\\s*)(\\()\\s*",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.operator.new.bsl"
                        },
                        "2": {
                            "name": "support.class.bsl"
                        },
                        "3": {
                            "name": "punctuation.bracket.begin.bsl"
                        }
                    },
                    "end": "\\s*(\\))",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.bracket.end.bsl"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#miscellaneous"
                        },
                        {
                            "include": "#blockEntities"
                        },
                        {
                            "include": "#basic"
                        }
                    ]
                }
            ]
        },
        "functionDefinition": {
            "begin": "(?i:(Асинх|Async)\\s+)?(Процедура|Функция)\\s+([_$[:alpha:]][_$[:alnum:]]*)\\s*(\\()",
            "beginCaptures": {
                "1": {
                    "name": "storage.modifier.async.bsl"
                },
                "2": {
                    "name": "storage.type.bsl"
                },
                "3": {
                    "name": "entity.name.function.bsl"
                },
                "4": {
                    "name": "punctuation.bracket.begin.bsl"
                }
            },
            "end": "(?i:(\\))\\s*((Экспорт)(?=[^\\wа-яё\\.]|$))?)",
            "endCaptures": {
                "1": {
                    "name": "punctuation.bracket.end.bsl"
                },
                "2": {
                    "name": "storage.modifier.bsl"
                }
            },
            "patterns": [
                {
                    "include": "#annotations"
                },
                {
                    "include": "#basic"
                },
                {
                    "name": "storage.modifier.bsl",
                    "match": "(?i:(?<=[^\\wа-яё\\.]|^)(Знач)(?=[^\\wа-яё\\.]|$))"
                },
                {
                    "name": "invalid.illegal.bsl",
                    "match": "(?<=[^\\wа-яё\\.]|^)((?<==)(?i)[a-zа-яё0-9_]+)(?=[^\\wа-яё\\.]|$)"
                },
                {
                    "name": "invalid.illegal.bsl",
                    "match": "(?<=[^\\wа-яё\\.]|^)((?<==\\s)\\s*(?i)[a-zа-яё0-9_]+)(?=[^\\wа-яё\\.]|$)"
                },
                {
                    "include": "#miscellaneous"
                },
                {
                    "include": "#blockEntities"
                },
                {
                    "name": "variable.parameter.bsl",
                    "match": "(?i:[a-zа-яё0-9_]+)"
                }
            ]
        },
        "functionEnd": {
            "begin": "(?i)(Конец(?:Процедуры|Функции))",
            "end": "$",
            "beginCaptures": {
                "1": {
                    "name": "storage.type.bsl"
                }
            },
            "patterns": [
                {
                    "include": "#commentLine"
                }
            ]
        },
        "stringPatternParameter": {
            "patterns": [
                {
                    "match": "%[0-9]+",
                    "name": "variable.parameter.bsl"
                }
            ]
        },
        "supportEnums": {
            "patterns": [
                {
                    "match": "(?i:)(?<![\\.\\)\\]]\\s*)\\b(ОбходРезультатаЗапроса)\\b(?=\\s*\\.)",
                    "name": "support.class.bsl"
                },
                {
                    "match": "(?i:)(?<![\\.\\)\\]]\\s*)\\b(РежимЗаписиДокумента|РежимПроведенияДокумента)\\b(?=\\s*\\.)",
                    "name": "support.class.bsl"
                },
                {
                    "match": "(?i:)(?<![\\.\\)\\]]\\s*)\\b(РежимДиалогаВопрос|КодВозвратаДиалога)\\b(?=\\s*\\.)",
                    "name": "support.class.bsl"
                },
                {
                    "match": "(?i:)(?<![\\.\\)\\]]\\s*)\\b(ВидДвиженияНакопления|ВидПериодаРегистраРасчета)\\b(?=\\s*\\.)",
                    "name": "support.class.bsl"
                },
                {
                    "match": "(?i:)(?<![\\.\\)\\]]\\s*)\\b(РежимБлокировкиДанных|ВидГраницы)\\b(?=\\s*\\.)",
                    "name": "support.class.bsl"
                }
            ]
        },
        "supportClasses": {
            "patterns": [
                {
                    "include": "#supportRegisterTable"
                },
                {
                    "match": "(?i:)(?<![\\.\\)\\]]\\s*)\\b(WSСсылки|БиблиотекаКартинок|БиблиотекаМакетовОформленияКомпоновкиДанных|БиблиотекаСтилей|БизнесПроцессы|ВнешниеИсточникиДанных|ВнешниеОбработки|ВнешниеОтчеты|Документы|ДоставляемыеУведомления|ЖурналыДокументов|Задачи|ИнформацияОбИнтернетСоединении|ИспользованиеРабочейДаты|ИсторияРаботыПользователя|Константы|КритерииОтбора|Метаданные|Обработки|ОтправкаДоставляемыхУведомлений|Отчеты|ПараметрыСеанса|Перечисления|ПланыВидовРасчета|ПланыВидовХарактеристик|ПланыОбмена|ПланыСчетов|ПолнотекстовыйПоиск|ПользователиИнформационнойБазы|Последовательности|РасширенияКонфигурации|РегистрыБухгалтерии|РегистрыНакопления|РегистрыРасчета|РегистрыСведений|РегламентныеЗадания|СериализаторXDTO|Справочники|СредстваГеопозиционирования|СредстваКриптографии|СредстваМультимедиа|СредстваОтображенияРекламы|СредстваПочты|СредстваТелефонии|ФабрикаXDTO|ФайловыеПотоки|ФоновыеЗадания|ХранилищаНастроек|ВстроенныеПокупки|ОтображениеРекламы|ПанельЗадачОС|ПроверкаВстроенныхПокупок)\\b(?=\\s*\\.)",
                    "name": "support.class.bsl"
                },
                {
                    "match": "(?i:)(?<![\\.\\)\\]]\\s*)\\b(ОбработкаОшибок)\\b(?=\\s*\\.)",
                    "name": "support.class.bsl"
                }
            ]
        },
        "supportLanguageConstant": {
            "patterns": [
                {
                    "match": "(?i:)(?<![\\.\\)\\]]\\s*)\\b(ЭтотОбъект|ЭтаФорма)\\b",
                    "name": "constant.language.bsl"
                }
            ]
        },
        "supportRegisterTable": {
            "patterns": [
                {
                    "match": "(?i:)(?<![\\.\\)\\]]\\s*)\\b(Регистры(?:Накопления|Сведений|Бухгалтерии))\\b(?=\\s*\\.)",
                    "name": "support.class.bsl"
                }
            ]
        },
        "stringSupportValues": {
            "patterns": [
                {
                    "begin": "(?i:)(\\\")(Документ|Справочник|Перечисление)\\b(?=(?:\\s*\\.\\s*[_$[:alpha:]][_$[:alnum:]]*\\s*)+)",
                    "beginCaptures": {
                        "1": {
                            "name": "string.quoted.double.bsl"
                        },
                        "2": {
                            "name": "support.class.bsl"
                        }
                    },
                    "end": "(?<!\\\"\\s*)(\\\")(?!\\s*\\\")",
                    "endCaptures": {
                        "1": {
                            "name": "string.quoted.double.bsl"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#blockObjectProperties"
                        }
                    ]
                }
            ]
        },
        "supportValueTypes": {
            "match": "\\b(?i:Булево|Число|Строка|Дата)\\b",
            "name": "support.type.bsl"
        },
        "quotedString": {
            "begin": "(\\\")",
            "beginCaptures": {
                "1": {
                    "name": "string.quoted.double.bsl"
                }
            },
            "end": "(\\\")(?![\\\"])",
            "endCaptures": {
                "1": {
                    "name": "string.quoted.double.bsl"
                }
            },
            "patterns": [
                {
                    "include": "#quotedStringBody"
                }
            ]
        },
        "quotedStringBody": {
            "patterns": [
                {
                    "include": "#query"
                },
                {
                    "name": "constant.character.escape.bsl",
                    "match": "\\\"\\\""
                },
                {
                    "name": "comment.line.double-slash.bsl",
                    "match": "(^\\s*//.*$)"
                },
                {
                    "include": "#stringPatternParameter"
                },
                {
                    "match": "[^\\\"]",
                    "name": "string.quoted.double.bsl"
                }
            ]
        },
        "_stringInnerSupports": {
            "patterns": [
                {
                    "match": "(?i:)(?<![\\.\\)\\]]\\s*)\\b(Документ|Справочник|Перечисление|ПланСчетов)\\b(?=\\s*\\.)",
                    "name": "support.class.bsl"
                },
                {
                    "match": "(?i:)(?<![\\.\\)\\]]\\s*)\\bРегистр(?:Накопления|Сведений|Бухгалтерии)(?=\\s+|\\.)",
                    "name": "support.class.bsl"
                },
                {
                    "match": "(?i:)(?<![\\.\\)\\]]\\s*)\\b((?:Документ|Справочник|Перечисление|ПланСчетов|ПланВидовРасчета|ПланВидовХарактеристик)(?:Ссылка|Объект))\\b(?=\\s*\\.|\\\")",
                    "name": "support.class.bsl"
                },
                {
                    "match": "(?i:)(?<![\\.\\)\\]]\\s*)\\b((?:Фиксированная)?Структура|(?:Фиксированный)?Массив|(?:Фиксированное)?Соответствие|Тип|ТаблицаЗначений|ДвоичныеДанные|ДеревоЗначений)\\b(?=\\\")",
                    "name": "support.class.bsl"
                },
                {
                    "match": "(?i:)(?<![\\.\\)\\]]\\s*)\\b(Булево|Boolean|Число|Number|Строка|String|Дата|Date)\\b(?=\\\")",
                    "name": "support.class.bsl"
                },
                {
                    "match": "(?i:)(?<![\\.\\)\\]]\\s*)\\b(МенеджерВременныхТаблиц|ТабличныйДокумент)\\b(?=\\\")",
                    "name": "support.class.bsl"
                },
                {
                    "include": "#blockObjectProperties"
                }
            ]
        },
        "stringWithSingleSupportValue": {
            "patterns": [
                {
                    "begin": "(?i:)(?<=\\b(?:ПредопределенноеЗначение|Тип)\\s*\\(\\s*)((?:\\\"|$))(?!\\s*\\\")",
                    "beginCaptures": {
                        "1": {
                            "name": "string.quoted.double.bsl"
                        }
                    },
                    "end": "(?<!\\\"\\s*)(\\\")(?!\\\")(?=\\))",
                    "endCaptures": {
                        "1": {
                            "name": "string.quoted.double.bsl"
                        }
                    },
                    "patterns": [
                        {
                            "match": "(?<=^\\s*)\\\"(?!\\s*\\\")",
                            "name": "string.quoted.double.bsl"
                        },
                        {
                            "include": "#_stringInnerSupports"
                        }
                    ]
                },
                {
                    "comment": "function callback arguments inline",
                    "begin": "(?i:)(?<=\\b(?:ОписаниеОповещения)\\s*\\(\\s*)(\\\")(?!\\s*\\\")",
                    "beginCaptures": {
                        "1": {
                            "name": "string.quoted.double.bsl"
                        }
                    },
                    "end": "(?<!\\\"\\s*)(\\\")(?!\\\")",
                    "endCaptures": {
                        "1": {
                            "name": "string.quoted.double.bsl"
                        }
                    },
                    "patterns": [
                        {
                            "match": "(?<=\\(\\s*\\\")\\b([_$[:alpha:]][_$[:alnum:]]*)\\b(?=\\\")",
                            "name": "entity.name.function.bsl"
                        }
                    ]
                },
                {
                    "comment": "function callback arguments in next line",
                    "begin": "(?i:)(?<=\\b(?:ОписаниеОповещения)\\b\\s*\\(\\s*)$",
                    "end": "(?<=\\S)(\\\")(?!\\\")",
                    "endCaptures": {
                        "1": {
                            "name": "string.quoted.double.bsl"
                        }
                    },
                    "patterns": [
                        {
                            "match": "(?<=^\\s*)\\\"(?!\\s*\\\")",
                            "name": "string.quoted.double.bsl"
                        },
                        {
                            "match": "(?<=^\\s*\\\")\\b([_$[:alpha:]][_$[:alnum:]]*)\\b(?=\\\")",
                            "name": "entity.name.function.bsl"
                        }
                    ]
                },
                {
                    "begin": "(?<!\\\"\\s*)(\\\")(?=[_$[:alpha:]][_$[:alnum:]]*\\\")(?!\\s*\\\")",
                    "beginCaptures": {
                        "1": {
                            "name": "string.quoted.double.bsl"
                        }
                    },
                    "end": "(?<!\\\"\\s*)(\\\")(?!\\s*\\\")",
                    "endCaptures": {
                        "1": {
                            "name": "string.quoted.double.bsl"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#_stringInnerSupports"
                        },
                        {
                            "include": "#quotedStringBody"
                        }
                    ]
                },
                {
                    "begin": "(?<!\\\"\\s*)(\\\")(?=[_$[:alpha:]][_$[:alnum:]]*(?:\\s*\\.\\s*[_$[:alpha:]][_$[:alnum:]]*\\s*)+\\\")(?!\\s*\\\")",
                    "beginCaptures": {
                        "1": {
                            "name": "string.quoted.double.bsl"
                        }
                    },
                    "end": "(?<!\\\"\\s*)(\\\")(?!\\s*\\\")",
                    "endCaptures": {
                        "1": {
                            "name": "string.quoted.double.bsl"
                        }
                    },
                    "patterns": [
                        {
                            "match": "(?i:)(?<![\\.\\)\\]]\\s*)\\b(Регистр(?:Накопления|Сведений|Бухгалтерии))\\b(?=(?:\\s*\\.\\s*[_$[:alpha:]][_$[:alnum:]]*\\s*)+)",
                            "captures": {
                                "1": {
                                    "name": "support.class.bsl"
                                }
                            },
                            "patterns": [
                                {
                                    "include": "#blockObjectProperties"
                                }
                            ]
                        },
                        {
                            "match": "(?i:)(?<![\\.\\)\\]]\\s*)\\b((?:Документ|Справочник|Перечисление|ПланСчетов)(?:Ссылка|Объект))\\b(?=(?:\\s*\\.\\s*[_$[:alpha:]][_$[:alnum:]]*\\s*)+)",
                            "captures": {
                                "1": {
                                    "name": "support.class.bsl"
                                }
                            },
                            "patterns": [
                                {
                                    "include": "#blockObjectProperties"
                                }
                            ]
                        },
                        {
                            "begin": "(?i:)(?<![\\.\\)\\]]\\s*)\\b((?:Документ|Справочник|Перечисление|ПланСчетов)(?:Ссылка|Объект))\\b(?=(?:\\s*\\.\\s*[_$[:alpha:]][_$[:alnum:]]*\\s*)+)",
                            "beginCaptures": {
                                "1": {
                                    "name": "string.quoted.double.bsl"
                                },
                                "2": {
                                    "name": "support.type.bsl"
                                }
                            },
                            "end": "(?<!\\\"\\s*)(\\\")(?!\\s*\\\")",
                            "endCaptures": {
                                "1": {
                                    "name": "string.quoted.double.bsl"
                                }
                            },
                            "patterns": [
                                {
                                    "include": "#blockObjectProperties"
                                },
                                {
                                    "include": "#quotedStringBody"
                                }
                            ]
                        },
                        {
                            "include": "#quotedStringBody"
                        }
                    ]
                }
            ]
        },
        "extensionRegions": {
            "patterns": [
                {
                    "match": "(?i)(#[Вв]ставка\\b)\\s*(//.*)?$",
                    "name": "keyword.control.region.past.bsl",
                    "captures": {
                        "1": { "name": "keyword.control.region.past.start.bsl" },
                        "2": { "name": "comment.line.double-slash.bsl" }
                    }
                },
                {
                    "match": "(?i)(#[Кк]онец[Вв]ставки\\b)\\s*(//.*)?$",
                    "name": "keyword.control.region.past.bsl",
                    "captures": {
                        "1": { "name": "keyword.control.region.past.end.bsl" },
                        "2": { "name": "comment.line.double-slash.bsl" }
                    }
                },
                {
                    "match": "(?i)(#[Уу]даление\\b)\\s*(//.*)?$",
                    "name": "keyword.control.region.del.bsl",
                    "captures": {
                        "1": { "name": "keyword.control.region.del.start.bsl" },
                        "2": { "name": "comment.line.double-slash.bsl" }
                    }
                },
                {
                    "match": "(?i)(#[Кк]онец[Уу]даления\\b)\\s*(//.*)?$",
                    "name": "keyword.control.region.past.del.bsl",
                    "captures": {
                        "1": { "name": "keyword.control.region.del.end.bsl" },
                        "2": { "name": "comment.line.double-slash.bsl" }
                    }
                }
            ]
        },
        "commentLine": {
            "patterns": [
                {
                    "include": "#developerCommentLine"
                },
                {
                    "match": "//.*$",
                    "name": "comment.line.double-slash.bsl"
                }
            ]
        },
        "developerCommentLine": {
            "patterns": [
                {
                    "match": "\\s*(//\\s*(?:->{3}|<{3}-)\\s+.*)$",
                    "captures": {
                        "1": {
                            "name": "comment.line.developer.bsl"
                        }
                    }
                },
                {
                    "match": "\\s*(//\\s*(?:\\{{3}|\\}{3})\\s+.*)$",
                    "captures": {
                        "1": {
                            "name": "comment.line.developer.bsl"
                        }
                    }
                },
                {
                    "match": "\\s*(//.*(?:\\{{3}|\\}{3})\\s*)$",
                    "captures": {
                        "1": {
                            "name": "comment.line.developer.bsl"
                        }
                    }
                },
                {
                    "match": "\\s*(//\\s*(?:\\+{3}|-{3})\\s+.*)$",
                    "captures": {
                        "1": {
                            "name": "comment.line.developer.bsl"
                        }
                    }
                },
                {
                    "match": "\\s*(//.*(?:\\+{2}|-{2})\\s*)$",
                    "captures": {
                        "1": {
                            "name": "comment.line.developer.bsl"
                        }
                    }
                }
            ]
        },
        "commentBlock": {
            "name": "comment.line.double-slash.bsl",
            "begin": "^\\s*(?=//\\s*)",
            "end": "(?=^(?!\\s*//))",
            "patterns": [
                {
                    "include": "#functionDocumentation"
                },
                {
                    "include": "#commentLine"
                }
            ]
        },
        "functionDocumentation": {
            "name": "meta.documentation.block.bsl",
            "begin": "^\\s*(?=(//\\s*)[Пп]араметры:|[Вв]озвращаемое значение:)",
            "end": "(?=^(?!\\s*//))",
            "patterns": [
                {
                    "include": "#docParametersBlock"
                },
                {
                    "include": "#docReturnsBlock"
                }
            ]
        },
        "docParametersBlock": {
            "name": "meta.documentation.parameters.bsl",
            "begin": "^\\s*(//\\s*)([Пп]араметры:)",
            "end": "(?=^\\s*//\\s*[Вв]озвращаемое значение:|^(?!\\s*//))",
            "beginCaptures": {
                "1": {
                    "name": "comment.line.double-slash.bsl"
                },
                "2": {
                    "name": "keyword.control.documentation.bsl"
                }
            },
            "patterns": [
                {
                    "name": "meta.parameter.bsl",
                    "match": "^\\s*(//\\s*)([А-Яа-яЁё\\w]+)\\s*-\\s*([А-Яа-яЁё\\w.]+)(?:\\s*-\\s*(.+))?",
                    "captures": {
                        "1": { "name": "comment.line.double-slash.bsl" },
                        "2": { "name": "variable.parameter.bsl" },
                        "3": { "name": "entity.name.type.bsl" },
                        "4": { "name": "comment.line.description.bsl" }
                    }
                },
                {
                    "include": "#commentLine"
                }
            ]
        },
        "docReturnsBlock": {
            "name": "meta.documentation.returns.bsl",
            "begin": "^\\s*(//\\s*)([Вв]озвращаемое значение:)",
            "end": "(?=^(?!\\s*//))",
            "beginCaptures": {
                "1": {
                    "name": "comment.line.double-slash.bsl"
                },
                "2": {
                    "name": "keyword.control.documentation.bsl"
                }
            },
            "patterns": [
                {
                    "name": "meta.return.bsl",
                    "match": "^\\s*(//\\s*-\\s*)([А-Яа-яЁё\\w.]+)(?:(\\s*-\\s*)([А-Яа-яЁё\\w.]+))?",
                    "captures": {
                        "1": {
                            "name": "comment.line.double-slash.bsl"
                        },
                        "2": {
                            "name": "entity.name.type.bsl"
                        },
                        "3": {
                            "name": "comment.line.double-slash.bsl"
                        },
                        "4": {
                            "name": "comment.line.double-slash.bsl"
                        }
                    }
                },
                {
                    "include": "#commentLine"
                }
            ]
        },
        "mainRegion": {
            "patterns": [
                {
                    "include": "#mainRegionStart"
                },
                {
                    "include": "#mainRegionEnd"
                }
            ]
        },
        "mainRegionStart": {
            "begin": "(?i)(#(Область))(?:\\s+([\\wа-яёА-ЯЁ]+))?",
            "beginCaptures": {
                "1": {
                    "name": "keyword.other.section.bsl"
                },
                "3": {
                    "name": "entity.name.section.bsl"
                }
            },
            "end": "$",
            "parameters": [
                {
                    "include": "#commentLine"
                }
            ]
        },
        "mainRegionEnd": {
            "match": "(?i)(#(КонецОбласти))(?:(\\s+//\\s*)([\\wа-яёА-ЯЁ]+)?)?",
            "captures": {
                "1": {
                    "name": "keyword.other.section.bsl"
                },
                "3": {
                    "name": "comment.line.double-slash.bsl"
                },
                "4": {
                    "name": "entity.name.section.bsl"
                }
            },
            "parameters": [
                {
                    "include": "#commentLine"
                }
            ]
        }
    }
}
